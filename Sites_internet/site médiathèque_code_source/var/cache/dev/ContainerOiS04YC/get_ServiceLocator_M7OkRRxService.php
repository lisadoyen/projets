<?php

namespace ContainerOiS04YC;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_M7OkRRxService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.M7OkRRx' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.M7OkRRx'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'categorieRepository' => ['privates', 'App\\Repository\\CategorieRepository', 'getCategorieRepositoryService', true],
            'em' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', false],
            'enregistrementRepository' => ['privates', 'App\\Repository\\EnregistrementRepository', 'getEnregistrementRepositoryService', true],
            'entiteRepository' => ['privates', 'App\\Repository\\EntiteRepository', 'getEntiteRepositoryService', true],
            'genreRepository' => ['privates', 'App\\Repository\\GenreRepository', 'getGenreRepositoryService', true],
            'livreOldRepository' => ['privates', '.errored._okGysM', NULL, 'Cannot determine controller argument for "App\\Controller\\Articles\\ArticleController::transfertBDDLivre()": the $livreOldRepository argument is type-hinted with the non-existent class or interface: "App\\Controller\\Articles\\LivreOldRepository". Did you forget to add a use statement?'],
            'statutEnregistrementRepository' => ['privates', 'App\\Repository\\StatutEnregistrementRepository', 'getStatutEnregistrementRepositoryService', true],
            'statutRepository' => ['privates', 'App\\Repository\\StatutRepository', 'getStatutRepositoryService', true],
            'trancheAgeRepository' => ['privates', 'App\\Repository\\TrancheAgeRepository', 'getTrancheAgeRepositoryService', true],
            'typeActionRepository' => ['privates', 'App\\Repository\\TypeActionRepository', 'getTypeActionRepositoryService', true],
            'typeEnregistrementRepository' => ['privates', 'App\\Repository\\TypeEnregistrementRepository', 'getTypeEnregistrementRepositoryService', true],
            'typeEntiteRepository' => ['privates', 'App\\Repository\\TypeEntiteRepository', 'getTypeEntiteRepositoryService', true],
            'userRepository' => ['privates', 'App\\Repository\\UserRepository', 'getUserRepositoryService', true],
        ], [
            'categorieRepository' => 'App\\Repository\\CategorieRepository',
            'em' => '?',
            'enregistrementRepository' => 'App\\Repository\\EnregistrementRepository',
            'entiteRepository' => 'App\\Repository\\EntiteRepository',
            'genreRepository' => 'App\\Repository\\GenreRepository',
            'livreOldRepository' => '?',
            'statutEnregistrementRepository' => 'App\\Repository\\StatutEnregistrementRepository',
            'statutRepository' => 'App\\Repository\\StatutRepository',
            'trancheAgeRepository' => 'App\\Repository\\TrancheAgeRepository',
            'typeActionRepository' => 'App\\Repository\\TypeActionRepository',
            'typeEnregistrementRepository' => 'App\\Repository\\TypeEnregistrementRepository',
            'typeEntiteRepository' => 'App\\Repository\\TypeEntiteRepository',
            'userRepository' => 'App\\Repository\\UserRepository',
        ]);
    }
}
