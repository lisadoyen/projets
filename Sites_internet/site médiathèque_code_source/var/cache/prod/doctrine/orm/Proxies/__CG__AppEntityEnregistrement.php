<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Enregistrement extends \App\Entity\Enregistrement implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'noCommande', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'datePreparationFini', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'dateEnregistrement', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'dateRendu', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'dateRenduTheorique', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'noteCommunication', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'typeEnregistrement', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'statutEnregistrement', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'utilisateur', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'article', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'staffs'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'noCommande', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'datePreparationFini', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'dateEnregistrement', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'dateRendu', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'dateRenduTheorique', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'noteCommunication', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'typeEnregistrement', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'statutEnregistrement', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'utilisateur', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'article', '' . "\0" . 'App\\Entity\\Enregistrement' . "\0" . 'staffs'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Enregistrement $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNoCommande(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoCommande', []);

        return parent::getNoCommande();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoCommande(int $noCommande): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoCommande', [$noCommande]);

        return parent::setNoCommande($noCommande);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatePreparationFini(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatePreparationFini', []);

        return parent::getDatePreparationFini();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatePreparationFini($datePreparationFini): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatePreparationFini', [$datePreparationFini]);

        return parent::setDatePreparationFini($datePreparationFini);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEnregistrement(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEnregistrement', []);

        return parent::getDateEnregistrement();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEnregistrement($dateEnregistrement): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEnregistrement', [$dateEnregistrement]);

        return parent::setDateEnregistrement($dateEnregistrement);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateRendu(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateRendu', []);

        return parent::getDateRendu();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateRendu($dateRendu): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateRendu', [$dateRendu]);

        return parent::setDateRendu($dateRendu);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateRenduTheorique(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateRenduTheorique', []);

        return parent::getDateRenduTheorique();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateRenduTheorique($dateRenduTheorique): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateRenduTheorique', [$dateRenduTheorique]);

        return parent::setDateRenduTheorique($dateRenduTheorique);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoteCommunication(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoteCommunication', []);

        return parent::getNoteCommunication();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoteCommunication(?string $noteCommunication): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoteCommunication', [$noteCommunication]);

        return parent::setNoteCommunication($noteCommunication);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeEnregistrement(): ?\App\Entity\TypeEnregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeEnregistrement', []);

        return parent::getTypeEnregistrement();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeEnregistrement(?\App\Entity\TypeEnregistrement $typeEnregistrement): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeEnregistrement', [$typeEnregistrement]);

        return parent::setTypeEnregistrement($typeEnregistrement);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatutEnregistrement(): ?\App\Entity\StatutEnregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatutEnregistrement', []);

        return parent::getStatutEnregistrement();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatutEnregistrement(?\App\Entity\StatutEnregistrement $statutEnregistrement): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatutEnregistrement', [$statutEnregistrement]);

        return parent::setStatutEnregistrement($statutEnregistrement);
    }

    /**
     * {@inheritDoc}
     */
    public function getUtilisateur(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUtilisateur', []);

        return parent::getUtilisateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setUtilisateur(?\App\Entity\User $utilisateur): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUtilisateur', [$utilisateur]);

        return parent::setUtilisateur($utilisateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticle(): ?\App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticle', []);

        return parent::getArticle();
    }

    /**
     * {@inheritDoc}
     */
    public function setArticle(?\App\Entity\Article $article): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArticle', [$article]);

        return parent::setArticle($article);
    }

    /**
     * {@inheritDoc}
     */
    public function getStaffs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStaffs', []);

        return parent::getStaffs();
    }

    /**
     * {@inheritDoc}
     */
    public function addStaff(\App\Entity\User $staff): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStaff', [$staff]);

        return parent::addStaff($staff);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStaff(\App\Entity\User $staff): \App\Entity\Enregistrement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStaff', [$staff]);

        return parent::removeStaff($staff);
    }

}
